#!/bin/bash
# NSO in Docker takes a container centric approach to dealing with ncs.conf.
# Instead of manually editing ncs.conf and persisting it over time, we generate
# a new one on every startup. We base it on the ncs.conf that is shipped in the
# base image and apply a number of "patches", essentially by running xmlstarlet
# on it (although other tools could be used of course). Configurable things can
# be exposed via environment variables.

# The basic design principle is that we always start over with the default
# ncs.conf on every startup and thus we do not need to implement modification in
# an idempotent manner. However, all the current modifications here are
# implemented in an idempotent fashion.
#
# Directly setting values is always idempotent, like this:
#
#   xmlstarlet edit --inplace --update '/_:ncs-config/_:a-leaf' --value 'something'
#
# Where we add new nodes, like here adding 'foo' under 'ncs-config':
#
#   xmlstarlet edit --inplace --subnode '/_:ncs-config' -t elem -n 'foo'
#
# We can make this idempotent by ensuring that 'foo' does not currently exist
# under 'ncs-config'. To do this, we use an XPath predicate on the subnode
# select, like so:
#
#   xmlstarlet edit --inplace --subnode '/_:ncs-config[not(_:foo)]' -t elem -n 'foo'
#
# It is also possible to inspect deeper, see the hide-group further down.
#

if [ ${MANGLE_CONFIG} = "false" ]; then
    echo "Config mangling disabled, early exit..."
    exit
fi

CONF_FILE=${CONF_FILE:-/etc/ncs/ncs.conf}

AUTO_WIZARD=${AUTO_WIZARD:-true}
CLI_STYLE=${CLI_STYLE:-j}
HA_ENABLE=${HA_ENABLE:-false}
HTTP_ENABLE=${HTTP_ENABLE:-false}
HTTPS_ENABLE=${HTTPS_ENABLE:-false}
SSH_PORT=${SSH_PORT:-22}
SSH_HOST_KEY_TYPE=${SSH_HOST_KEY_TYPE:-ed25519}

echo "== Mangle config variables"
echo "AUTO_WIZARD: ${AUTO_WIZARD}"
echo "CLI_STYLE: ${CLI_STYLE}"
echo "HA_ENABLE: ${HA_ENABLE}"
echo "HTTP_ENABLE: ${HTTP_ENABLE}"
echo "HTTPS_ENABLE: ${HTTPS_ENABLE}"
echo "SSH_PORT: ${SSH_PORT}"

# Inform readers who generated this config file
sed -i -e 's/Example configuration file for ncs./Generated by NSO in Docker startup script/' ${CONF_FILE}

# Add run-dir packages to load-path - this allows users to load packages from
# the persistent shared volume mounted on /nso.. specifically by placing them in
# /nso/run/packages
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
    -s '/x:ncs-config/x:load-path[not(x:dir="${NCS_RUN_DIR}/packages")]' -t elem -n dir -v '${NCS_RUN_DIR}/packages' \
    $CONF_FILE

# Control HA
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
    -s '/x:ncs-config[not(x:ha)]' -t elem -n 'ha' \
    -s '/x:ncs-config/ha[not(x:enabled)]' -t elem -n 'enabled' --value ${HA_ENABLE} \
    $CONF_FILE

# switch to local auth per default, allow to override through environment variable PAM
if [ "$PAM" != "true" ]; then
    xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
               --update '/x:ncs-config/x:aaa/x:pam/x:enabled' --value 'false' \
               --update '/x:ncs-config/x:aaa/x:local-authentication/x:enabled' --value 'true' \
               $CONF_FILE
fi

# configure the CLI style per environment variable configuration
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
    --update '/x:ncs-config/x:cli/x:style' --value "${CLI_STYLE}" \
    --subnode '/x:ncs-config/x:cli[not(x:style)]' \
    --type elem -n style \
    --value "${CLI_STYLE}" \
    $CONF_FILE

# Set host key algorithm for NSO built-in SSH server.
# Default in NSO x.x is ed25519 so we don't do anything in that case.
# In NSO 5.4 and later, there is no <ssh> node while in earlier versions, it
# already exists. We first wipe the <ssh> node to avoid creating a duplicate.
if [ "${SSH_HOST_KEY_TYPE}" != "ed25519" ]; then
    xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
               --delete '/x:ncs-config/x:ssh' \
               -s '/x:ncs-config' -t elem -n 'ssh' \
               -s '/x:ncs-config/ssh' -t elem -n 'algorithms' \
               -s '/x:ncs-config/ssh/algorithms' -t elem -n 'server-host-key' -v "ssh-${SSH_HOST_KEY_TYPE}" \
               $CONF_FILE
fi

# update ports for various protocols for which the default value in ncs.conf is
# different from the protocols default port (to allow starting ncs without root)
# NETCONF call-home is already on its default 4334 since that's above 1024
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           --update '/x:ncs-config/x:cli/x:ssh/x:port' --value "${SSH_PORT}" \
           --update '/x:ncs-config/x:webui/x:transport/x:tcp/x:port' --value '80' \
           --update '/x:ncs-config/x:webui/x:transport/x:ssl/x:port' --value '443' \
           --update '/x:ncs-config/x:netconf-north-bound/x:transport/x:ssh/x:port' --value '830' \
           $CONF_FILE

# enable SSH CLI, NETCONF over SSH northbound, NETCONF call-home and RESTCONF
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           --update '/x:ncs-config/x:cli/x:ssh/x:enabled' --value 'true' \
           --update '/x:ncs-config/x:netconf-north-bound/x:transport/x:ssh/x:enabled' --value 'true' \
           --update '/x:ncs-config/x:netconf-call-home/x:enabled' --value 'true' \
           --update '/x:ncs-config/x:restconf/x:enabled' --value 'true' \
           $CONF_FILE

# conditionally enable webUI with no TLS on port 80
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           --update '/x:ncs-config/x:webui/x:transport/x:tcp/x:enabled' --value ${HTTP_ENABLE} \
           $CONF_FILE

# conditionally enable webUI with TLS on port 443
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           --update '/x:ncs-config/x:webui/x:transport/x:ssl/x:enabled' --value ${HTTPS_ENABLE} \
           --update '/x:ncs-config/x:webui/x:transport/x:ssl/x:key-file' --value '${NCS_CONFIG_DIR}/ssl/cert/host.key' \
           --update '/x:ncs-config/x:webui/x:transport/x:ssl/x:cert-file' --value '${NCS_CONFIG_DIR}/ssl/cert/host.cert' \
           $CONF_FILE

# enable IPv6 for NETCONF northbound
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           -s '/x:ncs-config/x:netconf-north-bound/x:transport/x:ssh[not(x:extra-listen)]' -t elem -n extra-listen \
           -s '/x:ncs-config/x:netconf-north-bound/x:transport/x:ssh/extra-listen[not(x:ip)]' -t elem -n ip -v '::' \
           -s '/x:ncs-config/x:netconf-north-bound/x:transport/x:ssh/extra-listen[not(x:port)]' -t elem -n port -v '830' \
           $CONF_FILE

# enable IPv6 for NETCONF Call Home northbound
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           -s '/x:ncs-config/x:netconf-call-home/x:transport/x:tcp[not(x:extra-listen)]' -t elem -n extra-listen \
           -s '/x:ncs-config/x:netconf-call-home/x:transport/x:tcp/extra-listen[not(x:ip)]' -t elem -n ip -v '::' \
           -s '/x:ncs-config/x:netconf-call-home/x:transport/x:tcp/extra-listen[not(x:port)]' -t elem -n port -v '4334' \
           $CONF_FILE

# enable IPv6 for SSH northbound
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           -s '/x:ncs-config/x:cli/x:ssh[not(x:extra-listen)]' -t elem -n extra-listen \
           -s '/x:ncs-config/x:cli/x:ssh/extra-listen[not(x:ip)]' -t elem -n ip -v '::' \
           -s '/x:ncs-config/x:cli/x:ssh/extra-listen[not(x:port)]' -t elem -n port -v "${SSH_PORT}" \
           $CONF_FILE

# enable IPv6 for webUI (no TLS) northbound
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           -s '/x:ncs-config/x:webui/x:transport/x:tcp[not(x:extra-listen)]' -t elem -n extra-listen \
           -s '/x:ncs-config/x:webui/x:transport/x:tcp/extra-listen[not(x:ip)]' -t elem -n ip -v '::' \
           -s '/x:ncs-config/x:webui/x:transport/x:tcp/extra-listen[not(x:port)]' -t elem -n port -v '80' \
           $CONF_FILE

# enable IPv6 for webUI (with TLS) northbound
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           -s '/x:ncs-config/x:webui/x:transport/x:ssl[not(x:extra-listen)]' -t elem -n extra-listen \
           -s '/x:ncs-config/x:webui/x:transport/x:ssl/extra-listen[not(x:ip)]' -t elem -n ip -v '::' \
           -s '/x:ncs-config/x:webui/x:transport/x:ssl/extra-listen[not(x:port)]' -t elem -n port -v '443' \
           $CONF_FILE

# configure auto-wizard
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
            --subnode '/x:ncs-config/x:cli[not(x:auto-wizard)]' --type elem -n 'auto-wizard' \
            $CONF_FILE
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
            --update '/x:ncs-config/x:cli/x:auto-wizard/x:enabled' --value "${AUTO_WIZARD}" \
            --subnode '/x:ncs-config/x:cli/x:auto-wizard[not(x:enabled)]' --type elem -n 'enabled' --value "${AUTO_WIZARD}" \
            $CONF_FILE


# enable unhiding the two common groups 'debug' and 'full'
# This might be a little trickier to understand - we first add two new subnodes
# (-s option) under /ncs-config. They will just be placed at the end, then we
# fill them in by creating the name node in each and setting its value. The
# result looks like:
#
#     ...
#     <hide-group>
#       <name>debug</name>
#     </hide-group>
#     <hide-group>
#       <name>full</name>
#     </hide-group>
#   </ncs-config>
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           -s "/x:ncs-config[not(x:hide-group/x:name='debug')]" -t elem -n hide-group \
           -s "/x:ncs-config/hide-group" -t elem -n name -v debug \
           $CONF_FILE
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           -s "/x:ncs-config[not(x:hide-group/x:name='full')]" -t elem -n hide-group \
           -s "/x:ncs-config/hide-group" -t elem -n name -v full \
           $CONF_FILE

# Use the Python VM startup script shipped with NSO in Docker
xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
           --update '/x:ncs-config/x:python-vm/x:start-command' --value '/opt/ncs/nid/ncs-start-python-vm' \
           $CONF_FILE

# enable XPath trace log
if [ "$XPATH_TRACE" = "true" ]; then
    xmlstarlet edit --inplace -N x=http://tail-f.com/yang/tailf-ncs-config \
               --update '/x:ncs-config/x:logs/x:xpath-trace-log/x:enabled' --value 'true' \
               $CONF_FILE
fi
